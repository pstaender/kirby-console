#!/usr/bin/env php
<?php

require getcwd() . '/kirby/bootstrap.php';

if (file_exists(getcwd() . '/vendor/autoload.php')) {
    require getcwd() . '/vendor/autoload.php';
} else {
    require __DIR__ . '/../vendor/autoload.php';
}

if (php_sapi_name() !== 'cli') {
    exit('This script can only be executed on cli');
}

$writeExitStatusToFile = '';
$displayStartupMessage = true;

$kirby = new Kirby();


// display help and exit?
foreach ($argv as $arg) {
    if ($arg === '-h' || $arg === '--help') {
        exit("Usage: ${argv[0]} (userEmail)\n");
    }
    if (str_starts_with($arg, '--write-exit-status-to-file=')) {
        $writeExitStatusToFile = explode('=', $arg)[1];
    }
    if ($arg === '--no-startup-message') {
        $displayStartupMessage = false;
    }
}

$startupMessage = "Kirby v" . kirby()->version();

$email = $argv[1] ?? '';
if (!empty($email) && ($email[0] !== '-')) {
    $kirby->impersonate($email);
    $startupMessage .= " â€“ " . kirby()->user()->email();
} else {
    $email = '';
}

Zeitpulse\KirbyInteractiveShell\Shell::shell([
    'startupMessage' => $displayStartupMessage ? $startupMessage : null,
], impersonate: $email, writeExitStatusToFile: $writeExitStatusToFile)->run();
